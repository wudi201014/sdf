# 1 "src/stat.c"
# 1 "<built-in>"
# 1 "<command-line>"
# 1 "/usr/include/stdc-predef.h" 1 3 4
# 1 "<command-line>" 2
# 1 "src/stat.c"
# 1 "src/stat.h" 1




int Seed;
double ArrayA[10], ArrayB[10];
double SumA, SumB;
double Coef;

void InitSeed ();

void Calc_Sum_Mean(double Array[], double *Sum, double *Mean);

double Square(double x);

void Calc_Var_Stddev(double Array[], double Mean, double *Var, double *Stddev);

void Calc_LinCorrCoef(double ArrayA[],double ArrayB[],double MeanA,double MeanB );

void Initialize(double Array[]);

int RandomInteger();
# 2 "src/stat.c" 2
# 1 "src/math.h" 1

double sqrt_aux(double x, double last);

double racine(double x);

double Square(double x);
# 3 "src/stat.c" 2




void InitSeed ()
{
        Seed = 0;
}

void Calc_Sum_Mean(double Array[], double *Sum, double *Mean)
{
        int i;

        if(Array){
                *Sum = 0;
                for (i = 0; i < 10; i++)
                        *Sum += Array[i];
                if (*Sum == 0){
                        *Mean = 0;
                }else if (*Sum > 0){
                        *Mean = *Sum / 10;
                        if(*Mean > 10){
                                for (i = 0; i < 10; i++){
                                        *Mean += 1000;
                                        *Mean -= 1000;
                                }
                        }else{
                                *Mean += 3000;
                                *Mean -= 3000;
                        }
                }else{
                        *Mean = -(*Sum / 10);
                        *Mean = -(*Mean);
                }
        }
}

void Calc_Var_Stddev(double Array[], double Mean, double *Var, double *Stddev)
{
        int i;
        double diffs;

        diffs = 0.0;
        for (i = 0; i < 10; i++)
                diffs += Square(Array[i] - Mean);
        *Var = diffs/10;
        *Stddev = racine(*Var);
}


void Calc_LinCorrCoef(double ArrayA[],double ArrayB[],double MeanA,double MeanB )
{
        int i;
        double numerator, Aterm, Bterm;

        numerator = 0.0;
        Aterm = Bterm = 0.0;
        for (i = 0; i < 10; i++) {
                numerator += (ArrayA[i] - MeanA) * (ArrayB[i] - MeanB);
                Aterm += Square(ArrayA[i] - MeanA);
                Bterm += Square(ArrayB[i] - MeanB);
        }


        Coef = numerator / (racine(Aterm) * racine(Bterm));
}




        void Initialize(double Array[])
        {
                register int i;

                for (i=0; i < 10; i++)
                        Array [i] = i + RandomInteger ()/8095.0;
        }




        int RandomInteger()
        {
                Seed = ((Seed * 133) + 81) % 8095;
                return (Seed);
        }
